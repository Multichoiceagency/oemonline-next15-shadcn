{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ||\r\n  new PrismaClient({\r\n    log: [\"query\", \"info\", \"warn\", \"error\"],\r\n  });\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM;AAEC,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6IAAY,CAAC;IACf,KAAK;QAAC;QAAS;QAAQ;QAAQ;KAAQ;AACzC;AAEF,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/app/api/admin/stats/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\r\n\r\nexport async function GET() {\r\n  const [orders, products, users] = await Promise.all([\r\n    prisma.order.count(),\r\n    prisma.product.count(),\r\n    prisma.user.count(),\r\n  ]);\r\n\r\n  const revenueData = await prisma.order.aggregate({\r\n    _sum: { total: true },\r\n  });\r\n\r\n  return Response.json({\r\n    orders,\r\n    products,\r\n    users,\r\n    revenue: revenueData._sum.total || 0,\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IACpB,MAAM,CAAC,QAAQ,UAAU,MAAM,GAAG,MAAM,QAAQ,GAAG,CAAC;QAClD,wKAAM,CAAC,KAAK,CAAC,KAAK;QAClB,wKAAM,CAAC,OAAO,CAAC,KAAK;QACpB,wKAAM,CAAC,IAAI,CAAC,KAAK;KAClB;IAED,MAAM,cAAc,MAAM,wKAAM,CAAC,KAAK,CAAC,SAAS,CAAC;QAC/C,MAAM;YAAE,OAAO;QAAK;IACtB;IAEA,OAAO,SAAS,IAAI,CAAC;QACnB;QACA;QACA;QACA,SAAS,YAAY,IAAI,CAAC,KAAK,IAAI;IACrC;AACF","debugId":null}}]
}