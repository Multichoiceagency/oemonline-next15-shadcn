{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/env.ts"],"sourcesContent":["// lib/env.ts\r\nfunction req(name: string): string {\r\n  const v = process.env[name]\r\n  if (!v) throw new Error(`Missing env var: ${name}`)\r\n  return v\r\n}\r\n\r\nfunction boolEnv(name: string, def = false): boolean {\r\n  const v = process.env[name]\r\n  if (v == null) return def\r\n  return [\"1\",\"true\",\"yes\",\"on\"].includes(String(v).toLowerCase())\r\n}\r\n\r\nexport const ENV = {\r\n  TECDOC_BASE_JSON: req(\"TECDOC_BASE_JSON\"),\r\n  TECDOC_API_KEY: req(\"TECDOC_API_KEY\"),\r\n  TECDOC_PROVIDER_ID: Number(req(\"TECDOC_PROVIDER_ID\")), // number\r\n  TECDOC_LANG_DEFAULT: process.env.TECDOC_LANG_DEFAULT ?? \"nl\",\r\n  TECDOC_LINKAGE_COUNTRY: process.env.TECDOC_LINKAGE_COUNTRY ?? \"nl\",\r\n  TECDOC_ARTICLE_COUNTRIES: (process.env.TECDOC_ARTICLE_COUNTRIES ?? \"nl\")\r\n    .split(\",\").map((s) => s.trim()),\r\n\r\n  // ‚Üê belangrijke flags\r\n  TECDOC_PLATE_ENABLED: boolEnv(\"TECDOC_PLATE_ENABLED\", false),\r\n  TECDOC_PLATE_COUNTRY: process.env.TECDOC_PLATE_COUNTRY ?? \"nl\",\r\n}\r\n"],"names":[],"mappings":"AAAA,aAAa;;;;;AACb,SAAS,IAAI,IAAY;IACvB,MAAM,IAAI,QAAQ,GAAG,CAAC,KAAK;IAC3B,IAAI,CAAC,GAAG,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,MAAM;IAClD,OAAO;AACT;AAEA,SAAS,QAAQ,IAAY,EAAE,MAAM,KAAK;IACxC,MAAM,IAAI,QAAQ,GAAG,CAAC,KAAK;IAC3B,IAAI,KAAK,MAAM,OAAO;IACtB,OAAO;QAAC;QAAI;QAAO;QAAM;KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,WAAW;AAC/D;AAEO,MAAM,MAAM;IACjB,kBAAkB,IAAI;IACtB,gBAAgB,IAAI;IACpB,oBAAoB,OAAO,IAAI;IAC/B,qBAAqB,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IACxD,wBAAwB,QAAQ,GAAG,CAAC,sBAAsB,IAAI;IAC9D,0BAA0B,CAAC,QAAQ,GAAG,CAAC,wBAAwB,IAAI,IAAI,EACpE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;IAE/B,sBAAsB;IACtB,sBAAsB,QAAQ,wBAAwB;IACtD,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;AAC5D","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/logger.ts"],"sourcesContent":["// lib/logger.ts\r\nexport function logDebug(label: string, obj?: unknown) {\r\n  try { console.debug(label, obj ?? \"\") } catch {}\r\n}\r\nexport function logError(label: string, obj?: unknown) {\r\n  try { console.error(label, obj ?? \"\") } catch {}\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;;;AACT,SAAS,SAAS,KAAa,EAAE,GAAa;IACnD,IAAI;QAAE,QAAQ,KAAK,CAAC,OAAO,OAAO;IAAI,EAAE,OAAM,CAAC;AACjD;AACO,SAAS,SAAS,KAAa,EAAE,GAAa;IACnD,IAAI;QAAE,QAAQ,KAAK,CAAC,OAAO,OAAO;IAAI,EAAE,OAAM,CAAC;AACjD","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/tecdoc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// lib/tecdoc.ts\r\nimport { ENV } from \"./env\"\r\nimport { logDebug } from \"./logger\"\r\n\r\nexport function qp(req: Request, key: string, fallback?: string): string | undefined {\r\n  const v = new URL(req.url).searchParams.get(key)\r\n  return (v ?? fallback) ?? undefined\r\n}\r\nexport function qpn(req: Request, key: string, fallback?: number): number | undefined {\r\n  const v = new URL(req.url).searchParams.get(key)\r\n  if (v == null) return fallback\r\n  const n = Number(v)\r\n  return Number.isFinite(n) ? n : fallback\r\n}\r\n\r\n/** Mapping van gebruikte TecDoc operations. */\r\nexport const TecdocOps = {\r\n  // voertuigen\r\n  manufacturers: \"getManufacturers\",\r\n  modelSeries: \"getModelSeries\",\r\n  vehicleIdsByCriteria: \"getVehicleIdsByCriteria\",\r\n  vehiclesByPlate: \"getVehiclesByKeyNumberPlates\",\r\n\r\n  // artikelen / merken (optioneel elders gebruikt)\r\n  articles: \"getArticles\",\r\n  brands: \"getBrands\",\r\n  amBrands: \"getAmBrands\",\r\n  articleByIds6: \"getArticleDirectSearchByIds6\",\r\n  articleAssignedByIds6: \"getAssignedArticlesByIds6\",\r\n\r\n  // aliassen\r\n  articleById: \"getArticles\",\r\n  articleImages: \"getArticles\",\r\n} as const\r\nexport type TecdocOpName = typeof TecdocOps[keyof typeof TecdocOps]\r\n\r\n/** Zorg dat page/perPage altijd integers zijn (Pegasus is strikt). */\r\nfunction normalizePaging(params: Record<string, any>) {\r\n  const p: any = { ...params }\r\n  if (typeof p.page === \"object\" && p.page) {\r\n    const n = Number(p.page.number ?? p.page.page ?? 1)\r\n    const s = Number(p.page.size ?? p.page.perPage ?? p.perPage ?? 25)\r\n    p.page = Number.isFinite(n) ? n : 1\r\n    p.perPage = Number.isFinite(s) ? s : 25\r\n  }\r\n  if (!Number.isFinite(p.page)) p.page = 1\r\n  if (!Number.isFinite(p.perPage)) delete p.perPage\r\n  return p\r\n}\r\n\r\nexport async function tecdocCall<T = any>(\r\n  resource: TecdocOpName | string,\r\n  params: Record<string, any>\r\n) {\r\n  const base = ENV.TECDOC_BASE_JSON\r\n  const provider = ENV.TECDOC_PROVIDER_ID\r\n  const lang = params.lang ?? ENV.TECDOC_LANG_DEFAULT\r\n  const country = params.country ?? ENV.TECDOC_LINKAGE_COUNTRY\r\n\r\n  let bodyParams: Record<string, any> = {\r\n    provider,\r\n    lang,\r\n    country,\r\n    countryCode: country,                         // sommige methodes eisen beide\r\n    articleCountry: ENV.TECDOC_ARTICLE_COUNTRIES[0],\r\n    ...params,\r\n  }\r\n  bodyParams = normalizePaging(bodyParams)\r\n\r\n  const payload = { [resource]: bodyParams }\r\n\r\n  logDebug(\"[TecDoc] REQUEST\", { resource, url: base, body: payload })\r\n\r\n  const res = await fetch(base, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Api-Key\": ENV.TECDOC_API_KEY,\r\n    },\r\n    body: JSON.stringify(payload),\r\n    keepalive: true,\r\n  })\r\n\r\n  const text = await res.text().catch(() => \"\")\r\n  if (!res.ok) {\r\n    throw new Error(`TecDoc ${resource} ${res.status}: ${text}`)\r\n  }\r\n\r\n  let json: any = {}\r\n  try { json = text ? JSON.parse(text) : {} } catch {\r\n    throw new Error(`TecDoc ${resource}: invalid JSON response`)\r\n  }\r\n\r\n  logDebug(\"[TecDoc] RESPONSE\", json?.status ? json : { resource, status: 200 })\r\n  return json as T\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/app/api/vehicle-details/route.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// app/api/vehicle-details/route.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport { tecdocCall, qp, qpn } from \"@/lib/tecdoc\";\r\nimport { ENV } from \"@/lib/env\";\r\nimport { logDebug, logError } from \"@/lib/logger\";\r\n\r\nexport const dynamic = \"force-dynamic\";\r\n\r\ntype NormalizedVehicle = {\r\n  manuId?: number;\r\n  manuName?: string;\r\n  modelSeriesId?: number;\r\n  modelSeriesName?: string;\r\n  typeId?: number; // == carId / kType\r\n  typeName?: string;\r\n};\r\n\r\nfunction normalizeVehicleShape(raw: any): NormalizedVehicle {\r\n  const v = raw?.data?.array?.[0] ?? raw?.data ?? raw ?? {};\r\n  const n: NormalizedVehicle = {\r\n    manuId: v.manuId ?? v.manufacturerId ?? v.manuNo ?? v?.manufacturer?.id,\r\n    manuName: v.manuName ?? v.manufacturerName ?? v?.manufacturer?.name,\r\n    modelSeriesId: v.modelSeriesId ?? v.modId ?? v?.modelSeries?.id,\r\n    modelSeriesName: v.modelSeriesName ?? v.modelName ?? v?.modelSeries?.name,\r\n    typeId: v.typeId ?? v.carId ?? v.kType ?? v.vehicleId ?? v?.vehicle?.id,\r\n    typeName: v.typeName ?? v.carName ?? v.vehicleName ?? v?.vehicle?.name,\r\n  };\r\n  return n;\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  const carId = qpn(req, \"carId\");\r\n  const country = qp(req, \"country\", ENV.TECDOC_LINKAGE_COUNTRY);\r\n  const lang = qp(req, \"lang\", ENV.TECDOC_LANG_DEFAULT);\r\n\r\n  if (!carId)\r\n    return NextResponse.json({ error: \"Missing carId\" }, { status: 400 });\r\n\r\n  try {\r\n    logDebug(\"[TecDoc] VEHICLE_DETAILS_TRY_1\", { carId });\r\n    const r1 = await tecdocCall(\"getVehicleByIds4\", {\r\n      country,\r\n      lang,\r\n      vehicleIds: { array: [carId] },\r\n      linkingTargetId: carId,\r\n      linkingTargetType: \"P\",\r\n    });\r\n    const norm1 = normalizeVehicleShape(r1);\r\n    if (norm1?.typeId) {\r\n      return NextResponse.json(\r\n        {\r\n          ok: true,\r\n          source: \"getVehicleByIds4\",\r\n          normalized: norm1,\r\n          data: r1?.data,\r\n        },\r\n        {\r\n          headers: { \"Cache-Control\": \"private, max-age=300\" },\r\n        }\r\n      );\r\n    }\r\n  } catch (e) {\r\n    logError(\"[TecDoc] VEHICLE_DETAILS_TRY_1_FAIL\", {\r\n      message: String((e as Error).message),\r\n    });\r\n  }\r\n\r\n  try {\r\n    logDebug(\"[TecDoc] VEHICLE_DETAILS_TRY_2\", { carId });\r\n    const r2 = await tecdocCall(\"getLinkageTargets\", {\r\n      country,\r\n      lang,\r\n      linkingTargetId: carId,\r\n      linkingTargetType: \"P\",\r\n      includeLinkedData: true,\r\n      includeDetails: true,\r\n    });\r\n    const norm2 = normalizeVehicleShape(r2);\r\n    return NextResponse.json(\r\n      {\r\n        ok: true,\r\n        source: \"getLinkageTargets\",\r\n        normalized: norm2,\r\n        data: r2?.data,\r\n      },\r\n      {\r\n        headers: { \"Cache-Control\": \"private, max-age=300\" },\r\n      }\r\n    );\r\n  } catch (e) {\r\n    logError(\"[TecDoc] VEHICLE_DETAILS_TRY_2_FAIL\", {\r\n      message: String((e as Error).message),\r\n    });\r\n    return NextResponse.json(\r\n      { error: \"Kon voertuigdetails niet ophalen\" },\r\n      { status: 502 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,qDAAqD,GACrD,mCAAmC;;;;;;;AACnC;AACA;AACA;AACA;;;;;AAEO,MAAM,UAAU;AAWvB,SAAS,sBAAsB,GAAQ;IACrC,MAAM,IAAI,KAAK,MAAM,OAAO,CAAC,EAAE,IAAI,KAAK,QAAQ,OAAO,CAAC;IACxD,MAAM,IAAuB;QAC3B,QAAQ,EAAE,MAAM,IAAI,EAAE,cAAc,IAAI,EAAE,MAAM,IAAI,GAAG,cAAc;QACrE,UAAU,EAAE,QAAQ,IAAI,EAAE,gBAAgB,IAAI,GAAG,cAAc;QAC/D,eAAe,EAAE,aAAa,IAAI,EAAE,KAAK,IAAI,GAAG,aAAa;QAC7D,iBAAiB,EAAE,eAAe,IAAI,EAAE,SAAS,IAAI,GAAG,aAAa;QACrE,QAAQ,EAAE,MAAM,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,SAAS,IAAI,GAAG,SAAS;QACrE,UAAU,EAAE,QAAQ,IAAI,EAAE,OAAO,IAAI,EAAE,WAAW,IAAI,GAAG,SAAS;IACpE;IACA,OAAO;AACT;AAEO,eAAe,IAAI,GAAY;IACpC,MAAM,QAAQ,IAAA,oKAAG,EAAC,KAAK;IACvB,MAAM,UAAU,IAAA,mKAAE,EAAC,KAAK,WAAW,iKAAG,CAAC,sBAAsB;IAC7D,MAAM,OAAO,IAAA,mKAAE,EAAC,KAAK,QAAQ,iKAAG,CAAC,mBAAmB;IAEpD,IAAI,CAAC,OACH,OAAO,6TAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAgB,GAAG;QAAE,QAAQ;IAAI;IAErE,IAAI;QACF,IAAA,yKAAQ,EAAC,kCAAkC;YAAE;QAAM;QACnD,MAAM,KAAK,MAAM,IAAA,2KAAU,EAAC,oBAAoB;YAC9C;YACA;YACA,YAAY;gBAAE,OAAO;oBAAC;iBAAM;YAAC;YAC7B,iBAAiB;YACjB,mBAAmB;QACrB;QACA,MAAM,QAAQ,sBAAsB;QACpC,IAAI,OAAO,QAAQ;YACjB,OAAO,6TAAY,CAAC,IAAI,CACtB;gBACE,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,MAAM,IAAI;YACZ,GACA;gBACE,SAAS;oBAAE,iBAAiB;gBAAuB;YACrD;QAEJ;IACF,EAAE,OAAO,GAAG;QACV,IAAA,yKAAQ,EAAC,uCAAuC;YAC9C,SAAS,OAAO,AAAC,EAAY,OAAO;QACtC;IACF;IAEA,IAAI;QACF,IAAA,yKAAQ,EAAC,kCAAkC;YAAE;QAAM;QACnD,MAAM,KAAK,MAAM,IAAA,2KAAU,EAAC,qBAAqB;YAC/C;YACA;YACA,iBAAiB;YACjB,mBAAmB;YACnB,mBAAmB;YACnB,gBAAgB;QAClB;QACA,MAAM,QAAQ,sBAAsB;QACpC,OAAO,6TAAY,CAAC,IAAI,CACtB;YACE,IAAI;YACJ,QAAQ;YACR,YAAY;YACZ,MAAM,IAAI;QACZ,GACA;YACE,SAAS;gBAAE,iBAAiB;YAAuB;QACrD;IAEJ,EAAE,OAAO,GAAG;QACV,IAAA,yKAAQ,EAAC,uCAAuC;YAC9C,SAAS,OAAO,AAAC,EAAY,OAAO;QACtC;QACA,OAAO,6TAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAmC,GAC5C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}