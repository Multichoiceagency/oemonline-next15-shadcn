{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/env.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// lib/env.ts\r\nfunction toBool(v: any, def = false) {\r\n  if (v === undefined || v === null || v === \"\") return def\r\n  const s = String(v).trim().toLowerCase()\r\n  return [\"1\", \"true\", \"yes\", \"y\", \"on\"].includes(s)\r\n}\r\nfunction toNum(v: any, def: number) {\r\n  const n = Number(v)\r\n  return Number.isFinite(n) ? n : def\r\n}\r\n/** Parse CSV (\"nl,be,lu\") OR JSON ('[\"nl\",\"be\",\"lu\"]') → string[] */\r\nfunction toStrArray(v: any): string[] {\r\n  if (!v) return []\r\n  const s = String(v).trim()\r\n  try {\r\n    const parsed = JSON.parse(s)\r\n    if (Array.isArray(parsed)) return parsed.map((x) => String(x))\r\n  } catch {\r\n    return s.split(\",\").map((x) => x.trim()).filter(Boolean)\r\n  }\r\n  return []\r\n}\r\n/** Validate target type (P/L/K/T/B/M). Fallback 'P'. */\r\nfunction toTargetType(v: any): \"P\" | \"L\" | \"K\" | \"T\" | \"B\" | \"M\" {\r\n  const s = String(v || \"\").trim().toUpperCase()\r\n  return ([\"P\",\"L\",\"K\",\"T\",\"B\",\"M\"] as const).includes(s as any) ? (s as any) : \"P\"\r\n}\r\n\r\nexport const ENV = {\r\n  // TecDoc base\r\n  TECDOC_BASE_JSON: process.env.TECDOC_BASE_JSON || \"\",\r\n  TECDOC_API_KEY: process.env.TECDOC_API_KEY || \"\",\r\n  TECDOC_PROVIDER_ID: process.env.TECDOC_PROVIDER_ID || \"\",\r\n\r\n  // Locale / geo\r\n  TECDOC_LANG_DEFAULT: process.env.TECDOC_LANG_DEFAULT || \"nl\",\r\n  TECDOC_LANGS: toStrArray(process.env.TECDOC_LANGS),\r\n  TECDOC_LINKAGE_COUNTRY: process.env.TECDOC_LINKAGE_COUNTRY || \"nl\",\r\n  TECDOC_COUNTRY_GROUP: process.env.TECDOC_COUNTRY_GROUP || undefined,\r\n  TECDOC_CURRENCY: process.env.TECDOC_CURRENCY || undefined,\r\n\r\n  // Articles\r\n  TECDOC_ARTICLE_COUNTRIES: toStrArray(process.env.TECDOC_ARTICLE_COUNTRIES),\r\n\r\n  // Target type (personenauto standaard)\r\n  TECDOC_DEFAULT_TARGET: toTargetType(\r\n    process.env.TECDOC_DEFAULT_TARGET ?? process.env.TECDOC_LINKING_TARGET_TYPE\r\n  ),\r\n\r\n  // Plate lookup (tenant-specific)\r\n  TECDOC_PLATE_ENABLED: toBool(process.env.TECDOC_PLATE_ENABLED, false),\r\n  TECDOC_PLATE_COUNTRY: process.env.TECDOC_PLATE_COUNTRY || process.env.TECDOC_LINKAGE_COUNTRY || \"nl\",\r\n  TECDOC_PLATE_KEY_SYSTEM_NUMBER: process.env.TECDOC_PLATE_KEY_SYSTEM_NUMBER || \"\",\r\n\r\n  // Misc\r\n  TECDOC_DOWNLOAD_IMAGES: toBool(process.env.TECDOC_DOWNLOAD_IMAGES, false),\r\n  TECDOC_DEBUG: toBool(process.env.TECDOC_DEBUG, false),\r\n  TECDOC_TIMEOUT_MS: toNum(process.env.TECDOC_TIMEOUT_MS, 15000),\r\n\r\n  // Supabase / DB / Secrets (server-only)\r\n  SUPABASE_URL: process.env.SUPABASE_URL || \"\",\r\n  SUPABASE_SERVICE_ROLE_KEY: process.env.SUPABASE_SERVICE_ROLE_KEY || \"\",\r\n  JWT_SECRET: process.env.JWT_SECRET || \"\",\r\n  COOKIE_SECRET: process.env.COOKIE_SECRET || \"\",\r\n  DATABASE_URL: process.env.DATABASE_URL || \"\",\r\n  DATABASE_EXTRA: process.env.DATABASE_EXTRA || \"\",\r\n}\r\n"],"names":[],"mappings":"AAAA,qDAAqD,GACrD,aAAa;;;;;AACb,SAAS,OAAO,CAAM,EAAE,MAAM,KAAK;IACjC,IAAI,MAAM,aAAa,MAAM,QAAQ,MAAM,IAAI,OAAO;IACtD,MAAM,IAAI,OAAO,GAAG,IAAI,GAAG,WAAW;IACtC,OAAO;QAAC;QAAK;QAAQ;QAAO;QAAK;KAAK,CAAC,QAAQ,CAAC;AAClD;AACA,SAAS,MAAM,CAAM,EAAE,GAAW;IAChC,MAAM,IAAI,OAAO;IACjB,OAAO,OAAO,QAAQ,CAAC,KAAK,IAAI;AAClC;AACA,mEAAmE,GACnE,SAAS,WAAW,CAAM;IACxB,IAAI,CAAC,GAAG,OAAO,EAAE;IACjB,MAAM,IAAI,OAAO,GAAG,IAAI;IACxB,IAAI;QACF,MAAM,SAAS,KAAK,KAAK,CAAC;QAC1B,IAAI,MAAM,OAAO,CAAC,SAAS,OAAO,OAAO,GAAG,CAAC,CAAC,IAAM,OAAO;IAC7D,EAAE,OAAM;QACN,OAAO,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IAAI,MAAM,CAAC;IAClD;IACA,OAAO,EAAE;AACX;AACA,sDAAsD,GACtD,SAAS,aAAa,CAAM;IAC1B,MAAM,IAAI,OAAO,KAAK,IAAI,IAAI,GAAG,WAAW;IAC5C,OAAO,AAAC;QAAC;QAAI;QAAI;QAAI;QAAI;QAAI;KAAI,CAAW,QAAQ,CAAC,KAAa,IAAY;AAChF;AAEO,MAAM,MAAM;IACjB,cAAc;IACd,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB,IAAI;IAClD,gBAAgB,QAAQ,GAAG,CAAC,cAAc,IAAI;IAC9C,oBAAoB,QAAQ,GAAG,CAAC,kBAAkB,IAAI;IAEtD,eAAe;IACf,qBAAqB,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IACxD,cAAc,WAAW,QAAQ,GAAG,CAAC,YAAY;IACjD,wBAAwB,QAAQ,GAAG,CAAC,sBAAsB,IAAI;IAC9D,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;IAC1D,iBAAiB,QAAQ,GAAG,CAAC,eAAe,IAAI;IAEhD,WAAW;IACX,0BAA0B,WAAW,QAAQ,GAAG,CAAC,wBAAwB;IAEzE,uCAAuC;IACvC,uBAAuB,aACrB,QAAQ,GAAG,CAAC,qBAAqB,IAAI,QAAQ,GAAG,CAAC,0BAA0B;IAG7E,iCAAiC;IACjC,sBAAsB,OAAO,QAAQ,GAAG,CAAC,oBAAoB,EAAE;IAC/D,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB,IAAI,QAAQ,GAAG,CAAC,sBAAsB,IAAI;IAChG,gCAAgC,QAAQ,GAAG,CAAC,8BAA8B,IAAI;IAE9E,OAAO;IACP,wBAAwB,OAAO,QAAQ,GAAG,CAAC,sBAAsB,EAAE;IACnE,cAAc,OAAO,QAAQ,GAAG,CAAC,YAAY,EAAE;IAC/C,mBAAmB,MAAM,QAAQ,GAAG,CAAC,iBAAiB,EAAE;IAExD,wCAAwC;IACxC,cAAc,QAAQ,GAAG,CAAC,YAAY,IAAI;IAC1C,2BAA2B,QAAQ,GAAG,CAAC,yBAAyB,IAAI;IACpE,YAAY,QAAQ,GAAG,CAAC,UAAU,IAAI;IACtC,eAAe,QAAQ,GAAG,CAAC,aAAa,IAAI;IAC5C,cAAc,QAAQ,GAAG,CAAC,YAAY,IAAI;IAC1C,gBAAgB,QAAQ,GAAG,CAAC,cAAc,IAAI;AAChD","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/logger.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// lib/logger.ts\r\nimport { ENV } from \"./env\"\r\n\r\nexport function logDebug(label: string, data?: any) {\r\n  if (!ENV.TECDOC_DEBUG) return\r\n  try { console.log(`[TecDoc] ${label}`, data ?? \"\") } catch {}\r\n}\r\nexport function logError(label: string, data?: any) {\r\n  try { console.error(`[TecDoc][ERROR] ${label}:`, data ?? \"\") } catch {}\r\n}\r\n"],"names":[],"mappings":"AAAA,qDAAqD,GACrD,gBAAgB;;;;;;;AAChB;;AAEO,SAAS,SAAS,KAAa,EAAE,IAAU;IAChD,IAAI,CAAC,iKAAG,CAAC,YAAY,EAAE;IACvB,IAAI;QAAE,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ;IAAI,EAAE,OAAM,CAAC;AAC9D;AACO,SAAS,SAAS,KAAa,EAAE,IAAU;IAChD,IAAI;QAAE,QAAQ,KAAK,CAAC,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC,EAAE,QAAQ;IAAI,EAAE,OAAM,CAAC;AACxE","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/tecdoc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// lib/tecdoc.ts\r\nimport { ENV } from \"./env\"\r\nimport { logDebug } from \"./logger\"\r\n\r\n// ---------- Endpoint catalog (type-safe ops) ----------\r\nexport const TecdocOps = {\r\n  // Vehicle tree\r\n  manufacturers: \"getManufacturers\",\r\n  modelSeries: \"getModelSeries\",\r\n  types: \"getTypes\",\r\n\r\n  // Vehicle details / linkages\r\n  vehiclesByIds2: \"getVehiclesByIds2\",\r\n  linkageTargets: \"getLinkageTargets\",\r\n  linkageTargetsByCarIds: \"getLinkageTargetsByCarIds\",\r\n  vehicleByVinV3: \"getVehicleByVIN\",\r\n  vehiclesByVin2: \"getVehiclesByVIN2\",\r\n\r\n  // Plate\r\n  vehiclesByPlate: \"getVehiclesByKeyNumberPlates\",\r\n\r\n  // Brands\r\n  amBrands: \"getAmBrands\",\r\n\r\n  // Categories (Generic Articles)\r\n  genericArticles: \"getGenericArticles\",\r\n  genericArticlesByLinkingTarget: \"getGenericArticlesByLinkingTarget\",\r\n\r\n  // Assigned articles\r\n  assignedByLinkingTarget: \"getAssignedArticlesByLinkingTarget\",\r\n  assignedByLinkingTarget2: \"getAssignedArticlesByLinkingTarget2\",\r\n  assignedByLinkingTarget3: \"getAssignedArticlesByLinkingTarget3\",\r\n  assignedByIds6: \"getAssignedArticlesByIds6\",\r\n\r\n  // Article search / details / media\r\n  articleSearchByTerm: \"articleSearchByTerm\",\r\n  articleDirectSearchV3: \"articleDirectSearchV3\",\r\n  articlesByVehicleV3: \"getArticlesByVehicle\",\r\n  articleById: \"getArticles\",\r\n  articleMediaByIds: \"getArticleMediaByIds\",\r\n  articleMediaByIds6: \"getArticleMediaByIds6\",\r\n} as const\r\nexport type TecdocOp = typeof TecdocOps[keyof typeof TecdocOps]\r\nexport type TecdocResource = string\r\n\r\n// ---------- Query helpers ----------\r\nexport function qp(req: Request, key: string, def?: string) {\r\n  const url = new URL(req.url)\r\n  const val = url.searchParams.get(key)\r\n  return val == null ? def : val\r\n}\r\nexport function qpn(req: Request, key: string, def?: number) {\r\n  const v = qp(req, key)\r\n  if (v == null) return def\r\n  const n = Number(v)\r\n  return Number.isFinite(n) ? n : def\r\n}\r\n/** wrap array → { array: [...] } */\r\nexport function toArrayParam<T = any>(a?: T[] | null) {\r\n  if (!a || a.length === 0) return undefined\r\n  return { array: a }\r\n}\r\n/** unwrap arrays from various TecDoc shapes */\r\nexport function extractArray<T = any>(data: any): T[] {\r\n  if (!data) return []\r\n  if (Array.isArray(data)) return data\r\n  if (Array.isArray(data?.array)) return data.array\r\n  if (Array.isArray(data?.data)) return data.data\r\n  if (Array.isArray(data?.data?.array)) return data.data.array\r\n  return []\r\n}\r\nfunction clean<T extends Record<string, any>>(obj: T): T {\r\n  const out: Record<string, any> = {}\r\n  for (const [k, v] of Object.entries(obj)) {\r\n    if (v === undefined || v === null) continue\r\n    if (typeof v === \"string\" && v.trim() === \"\") continue\r\n    out[k] = v\r\n  }\r\n  return out as T\r\n}\r\nfunction withApiKey(url: string, apiKey?: string) {\r\n  if (!apiKey) return url\r\n  const hasQuery = url.includes(\"?\")\r\n  return url + (hasQuery ? \"&\" : \"?\") + \"api_key=\" + encodeURIComponent(apiKey)\r\n}\r\nexport const TECDOC_ENDPOINT =\r\n  ENV.TECDOC_BASE_JSON ||\r\n  \"https://webservice.tecalliance.services/pegasus-3-0/services/TecdocToCatDLB.jsonEndpoint\"\r\n\r\n// ---------- Defaults ----------\r\nexport const VehicleTargetType = {\r\n  Passenger: \"P\",\r\n  Transporter: \"L\",\r\n  Truck: \"K\",\r\n  Tractor: \"T\",\r\n  Bike: \"B\",\r\n  Engine: \"M\",\r\n} as const\r\nexport type VehicleTarget = typeof VehicleTargetType[keyof typeof VehicleTargetType]\r\n\r\nconst COMMON_DEFAULTS = clean({\r\n  lang: ENV.TECDOC_LANG_DEFAULT,\r\n  country: ENV.TECDOC_LINKAGE_COUNTRY,\r\n  countryCode: ENV.TECDOC_LINKAGE_COUNTRY,\r\n  countryGroup: ENV.TECDOC_COUNTRY_GROUP,\r\n  currency: ENV.TECDOC_CURRENCY,\r\n  articleCountry: (ENV.TECDOC_ARTICLE_COUNTRIES && ENV.TECDOC_ARTICLE_COUNTRIES[0])\r\n    ? ENV.TECDOC_ARTICLE_COUNTRIES[0]\r\n    : ENV.TECDOC_LINKAGE_COUNTRY,\r\n})\r\nconst DEFAULT_PAGE = 1\r\nconst DEFAULT_PER_PAGE = 40\r\nconst MAX_PER_PAGE = 500\r\n\r\nfunction withPageDefaults(payload: Record<string, any>) {\r\n  const page = Number(payload.page ?? DEFAULT_PAGE)\r\n  const perPageRaw = Number(payload.perPage ?? DEFAULT_PER_PAGE)\r\n  const perPage = Math.max(1, Math.min(MAX_PER_PAGE, perPageRaw || DEFAULT_PER_PAGE))\r\n  return { ...payload, page, perPage }\r\n}\r\nfunction withTargetType(payload: Record<string, any>) {\r\n  const linkingTargetType: VehicleTarget =\r\n    (payload.linkingTargetType as VehicleTarget) ||\r\n    (ENV.TECDOC_DEFAULT_TARGET as VehicleTarget) ||\r\n    VehicleTargetType.Passenger\r\n  return { ...payload, linkingTargetType }\r\n}\r\nfunction withTenantExtras(resource: string, payload: Record<string, any>) {\r\n  if (resource === TecdocOps.vehiclesByPlate) {\r\n    if (ENV.TECDOC_PLATE_KEY_SYSTEM_NUMBER) {\r\n      payload.keySystemNumber = ENV.TECDOC_PLATE_KEY_SYSTEM_NUMBER\r\n    }\r\n    payload.country = payload.country || ENV.TECDOC_PLATE_COUNTRY || ENV.TECDOC_LINKAGE_COUNTRY\r\n  }\r\n  return payload\r\n}\r\n\r\n// ---------- Main call ----------\r\nexport async function tecdocCall<T = any>(\r\n  resource: TecdocResource,\r\n  payload: Record<string, any>\r\n): Promise<T> {\r\n  let fields: Record<string, any> = clean({\r\n    provider: ENV.TECDOC_PROVIDER_ID,\r\n    ...COMMON_DEFAULTS,\r\n    ...payload,\r\n  })\r\n\r\n  fields = withPageDefaults(fields)\r\n  const needsTargetType =\r\n    resource === TecdocOps.assignedByLinkingTarget ||\r\n    resource === TecdocOps.assignedByLinkingTarget2 ||\r\n    resource === TecdocOps.assignedByLinkingTarget3 ||\r\n    resource === TecdocOps.genericArticlesByLinkingTarget ||\r\n    resource === TecdocOps.linkageTargets ||\r\n    resource === TecdocOps.linkageTargetsByCarIds\r\n  if (needsTargetType) fields = withTargetType(fields)\r\n  fields = withTenantExtras(resource, fields)\r\n  fields = clean(fields)\r\n\r\n  const bodyObj: Record<string, any> = { [resource]: fields }\r\n  const url = withApiKey(TECDOC_ENDPOINT, ENV.TECDOC_API_KEY)\r\n\r\n  const controller = new AbortController()\r\n  setTimeout(() => controller.abort(), Math.max(3000, ENV.TECDOC_TIMEOUT_MS || 15000))\r\n\r\n    logDebug(\"REQUEST\", { resource, url, body: bodyObj })\r\n    // You may want to add the actual fetch/request logic here, e.g.:\r\n    // const response = await fetch(url, { ... });\r\n    // return await response.json();\r\n\r\n    // Temporary mock return to satisfy return type\r\n    return {} as T\r\n  }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/app/api/plates/route.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// app/api/plates/route.ts\r\nimport { NextResponse } from \"next/server\"\r\nimport { ENV } from \"@/lib/env\"\r\nimport { tecdocCall, qp } from \"@/lib/tecdoc\"\r\nimport { logDebug, logError } from \"@/lib/logger\"\r\n\r\nexport const dynamic = \"force-dynamic\"\r\n\r\n// NL kenteken normaliseren: G-428-FK -> G428FK\r\nfunction normalizePlate(raw: string) {\r\n  return String(raw || \"\").toUpperCase().replace(/[^A-Z0-9]/g, \"\")\r\n}\r\n\r\n// keySystemType mapping o.b.v. TecAlliance guide (VRM/KBA/etc.)\r\nconst KEY_SYSTEM_TYPE: Record<string, number> = {\r\n  nl: 1,           // VRM (NL)\r\n  de: 20,          // KBA (DE)\r\n  fr: 50,          // VRM (FR)  (Type Mine = 2/21; meestal add. creds)\r\n  gb: 99, ie: 99,  // VRM (GB/IE)\r\n  it: 50, pt: 50,  // VRM\r\n  dk: 95, fi: 95, se: 95, no: 95, // VRM Nordics (vaak add. creds)\r\n  is: 10,          // VRM (IS)\r\n  au: 75, nz: 75,  // VRM (AU/NZ)\r\n  at: 6,           // National code (AT)\r\n  ch: 4,           // Type Permit (CH)\r\n  br: 100,         // VRM (BR)\r\n  mt: 99, es: 99,  // VRM\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  if (!ENV.TECDOC_PLATE_ENABLED) {\r\n    return NextResponse.json({ error: \"Plate lookup disabled\" }, { status: 503 })\r\n  }\r\n\r\n  const plateRaw = qp(req, \"plate\")\r\n  const country = (qp(req, \"country\", ENV.TECDOC_PLATE_COUNTRY) || \"nl\").toLowerCase()\r\n  const lang = qp(req, \"lang\", ENV.TECDOC_LANG_DEFAULT)\r\n\r\n  if (!plateRaw) {\r\n    return NextResponse.json({ error: \"Missing plate\" }, { status: 400 })\r\n  }\r\n\r\n  const keySystemNumber = normalizePlate(plateRaw)\r\n  const keySystemCountry = country.toUpperCase()\r\n  const keySystemType = KEY_SYSTEM_TYPE[country] ?? 1 // default NL VRM\r\n\r\n  // Gemeenschappelijke velden\r\n  const common = {\r\n    lang,\r\n    country,                 // target market\r\n    countryCode: country,    // sommige installs willen beide\r\n    articleCountry: ENV.TECDOC_ARTICLE_COUNTRIES[0],\r\n    linkingTargetType: \"P\",  // Passenger\r\n    page: 1,\r\n    perPage: 25,\r\n  }\r\n\r\n  // We proberen een paar varianten, want de JSON binding kan per tenant verschillen\r\n  const attempts = [\r\n    {\r\n      note: \"flat keySystem* fields\",\r\n      payload: {\r\n        ...common,\r\n        keySystemNumber,\r\n        keySystemCountry,\r\n        keySystemType,\r\n      },\r\n    },\r\n    {\r\n      note: \"nested keySystem object\",\r\n      payload: {\r\n        ...common,\r\n        keySystem: {\r\n          number: keySystemNumber,\r\n          country: keySystemCountry,\r\n          type: keySystemType,\r\n        },\r\n      },\r\n    },\r\n  ] as const\r\n\r\n  let lastResp: any = null\r\n  try {\r\n    for (const a of attempts) {\r\n      logDebug(\"[TecDoc] REQUEST\", {\r\n        resource: \"getVehiclesByKeyNumberPlates\",\r\n        url: ENV.TECDOC_BASE_JSON,\r\n        body: { getVehiclesByKeyNumberPlates: a.payload },\r\n      })\r\n\r\n      const resp = await tecdocCall(\"getVehiclesByKeyNumberPlates\", a.payload as any)\r\n      lastResp = resp\r\n\r\n      // Als TecDoc een status veld terugstuurt, check het:\r\n      if (resp?.status && resp.status >= 300) {\r\n        logError(\"[TecDoc][PLATE_STATUS]\", resp)\r\n        continue\r\n      }\r\n\r\n      logDebug(\"[TecDoc] RESPONSE OK (plates)\", { attempt: a.note })\r\n      return NextResponse.json(resp, {\r\n        headers: { \"Cache-Control\": \"private, max-age=300\" },\r\n      })\r\n    }\r\n\r\n    // Alle pogingen gaven error\r\n    const status = lastResp?.status ?? 502\r\n    const statusText = lastResp?.statusText || \"TecDoc error\"\r\n    logError(\"[TecDoc][PLATE_FAILED]\", lastResp)\r\n    return NextResponse.json({ error: statusText, tecdoc: lastResp }, { status })\r\n  } catch (e: any) {\r\n    logError(\"[TecDoc][PLATE_EXCEPTION]\", { message: String(e?.message || e) })\r\n    return NextResponse.json({ error: \"Kenteken lookup faalde\" }, { status: 502 })\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}