{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/env.ts"],"sourcesContent":["// lib/env.ts\r\nfunction req(name: string, fallback?: string) {\r\n  const v = process.env[name] ?? fallback\r\n  if (!v) throw new Error(`Missing env: ${name}`)\r\n  return v\r\n}\r\n\r\nexport const ENV = {\r\n  TECDOC_PROVIDER_ID: req(\"TECDOC_PROVIDER_ID\"),\r\n  TECDOC_API_KEY: req(\"TECDOC_API_KEY\"),\r\n  TECDOC_LANG_DEFAULT: req(\"TECDOC_LANG_DEFAULT\", \"nl\"),\r\n  TECDOC_LANGS: req(\"TECDOC_LANGS\", \"nl,fr\").split(\",\"),\r\n  TECDOC_ARTICLE_COUNTRIES: req(\"TECDOC_ARTICLE_COUNTRIES\", \"nl,be,lu\").split(\",\"),\r\n  TECDOC_LINKAGE_COUNTRY: req(\"TECDOC_LINKAGE_COUNTRY\", \"nl\"),\r\n  TECDOC_BASE_JSON: req(\"TECDOC_BASE_JSON\"),\r\n  TECDOC_PLATE_ENABLED: (process.env.TECDOC_PLATE_ENABLED ?? \"true\") === \"true\",\r\n  TECDOC_PLATE_COUNTRY: req(\"TECDOC_PLATE_COUNTRY\", \"nl\"),\r\n  TECDOC_DOWNLOAD_IMAGES: (process.env.TECDOC_DOWNLOAD_IMAGES ?? \"true\") === \"true\",\r\n}\r\n"],"names":[],"mappings":"AAAA,aAAa;;;;;AACb,SAAS,IAAI,IAAY,EAAE,QAAiB;IAC1C,MAAM,IAAI,QAAQ,GAAG,CAAC,KAAK,IAAI;IAC/B,IAAI,CAAC,GAAG,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,MAAM;IAC9C,OAAO;AACT;AAEO,MAAM,MAAM;IACjB,oBAAoB,IAAI;IACxB,gBAAgB,IAAI;IACpB,qBAAqB,IAAI,uBAAuB;IAChD,cAAc,IAAI,gBAAgB,SAAS,KAAK,CAAC;IACjD,0BAA0B,IAAI,4BAA4B,YAAY,KAAK,CAAC;IAC5E,wBAAwB,IAAI,0BAA0B;IACtD,kBAAkB,IAAI;IACtB,sBAAsB,CAAC,QAAQ,GAAG,CAAC,oBAAoB,IAAI,MAAM,MAAM;IACvE,sBAAsB,IAAI,wBAAwB;IAClD,wBAAwB,CAAC,QAAQ,GAAG,CAAC,sBAAsB,IAAI,MAAM,MAAM;AAC7E","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/lib/tecdoc.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { ENV } from \"@/lib/env\"\r\n\r\ntype TecdocBody = {\r\n  provider: number | string\r\n  locale: string            // bv. \"nl\"\r\n  country: string          // bv. \"nl\"\r\n  resource: string         // << naam van de functie, bv. \"getVehiclesByKeyNumberPlates\"\r\n  // parameters van de functie komen HIER in dezelfde body (Pegasus JSON)\r\n  [k: string]: any\r\n}\r\n\r\nexport async function tecdocCall<T = any>(\r\n  resource: string,\r\n  params: Record<string, any> = {},\r\n  init?: RequestInit\r\n): Promise<T> {\r\n  const body: TecdocBody = {\r\n    provider: Number(ENV.TECDOC_PROVIDER_ID),\r\n    locale: ENV.TECDOC_LANG_DEFAULT,\r\n    country: ENV.TECDOC_LINKAGE_COUNTRY,\r\n    resource,                // << cruciaal\r\n    ...params,               // << functie-parameters komen top-level mee\r\n  }\r\n\r\n  const res = await fetch(ENV.TECDOC_BASE_JSON, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      \"X-Api-Key\": ENV.TECDOC_API_KEY, // alternatief: ?api_key=... in de URL\r\n    },\r\n    body: JSON.stringify(body),\r\n    ...init,\r\n  })\r\n\r\n  if (!res.ok) {\r\n    const text = await res.text().catch(() => \"\")\r\n    throw new Error(`TecDoc ${resource} ${res.status}: ${text}`)\r\n  }\r\n  return res.json() as Promise<T>\r\n}\r\n\r\n// veelgebruikte namen (ter referentie)\r\nexport const TecdocOps = {\r\n  searchTerm: \"articleSearchByTerm\",\r\n  byPlate: \"getVehiclesByKeyNumberPlates\",  // VRM\r\n  byVin: \"getVehiclesByVIN\",\r\n  byMotorId: \"getVehicleIdsByMotor2\",\r\n  manufacturers: \"getManufacturers\",\r\n  models: \"getModelSeries\",\r\n  types: \"getVehicleIdsByCriteria\",         // of getVehicleTypes, afhankelijk van je tenant\r\n} as const\r\n\r\nexport function qp(req: Request, key: string, dflt?: string) {\r\n  const url = new URL(req.url); return (url.searchParams.get(key) ?? dflt)?.trim()\r\n}\r\nexport function qpn(req: Request, key: string, dflt?: number) {\r\n  const v = qp(req, key); if (!v) return dflt; const n = Number(v); return Number.isFinite(n) ? n : dflt\r\n}\r\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;AACrD;;AAWO,eAAe,WACpB,QAAgB,EAChB,SAA8B,CAAC,CAAC,EAChC,IAAkB;IAElB,MAAM,OAAmB;QACvB,UAAU,OAAO,iKAAG,CAAC,kBAAkB;QACvC,QAAQ,iKAAG,CAAC,mBAAmB;QAC/B,SAAS,iKAAG,CAAC,sBAAsB;QACnC;QACA,GAAG,MAAM;IACX;IAEA,MAAM,MAAM,MAAM,MAAM,iKAAG,CAAC,gBAAgB,EAAE;QAC5C,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,aAAa,iKAAG,CAAC,cAAc;QACjC;QACA,MAAM,KAAK,SAAS,CAAC;QACrB,GAAG,IAAI;IACT;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAC1C,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,EAAE,MAAM;IAC7D;IACA,OAAO,IAAI,IAAI;AACjB;AAGO,MAAM,YAAY;IACvB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,eAAe;IACf,QAAQ;IACR,OAAO;AACT;AAEO,SAAS,GAAG,GAAY,EAAE,GAAW,EAAE,IAAa;IACzD,MAAM,MAAM,IAAI,IAAI,IAAI,GAAG;IAAG,OAAO,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,QAAQ,IAAI,GAAG;AAC5E;AACO,SAAS,IAAI,GAAY,EAAE,GAAW,EAAE,IAAa;IAC1D,MAAM,IAAI,GAAG,KAAK;IAAM,IAAI,CAAC,GAAG,OAAO;IAAM,MAAM,IAAI,OAAO;IAAI,OAAO,OAAO,QAAQ,CAAC,KAAK,IAAI;AACpG","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/enesk/Documents/oemonline-next15-shadcn/app/api/search/route.ts"],"sourcesContent":["// app/api/search/route.ts\r\nimport { NextResponse } from \"next/server\"\r\nimport { tecdocCall, TecdocOps, qp, qpn } from \"@/lib/tecdoc\"\r\nimport { ENV } from \"@/lib/env\"\r\n\r\nexport const dynamic = \"force-dynamic\"\r\n\r\nexport async function GET(req: Request) {\r\n  const q = qp(req, \"q\")\r\n  if (!q) return NextResponse.json({ error: \"Missing q\" }, { status: 400 })\r\n\r\n  const page = qpn(req, \"page\", 1)\r\n  const perPage = qpn(req, \"perPage\", 25)\r\n  const op = qp(req, \"operation\", TecdocOps.searchTerm) ?? TecdocOps.searchTerm\r\n\r\n  // Typical payload: term, paging, filters\r\n  const payload = {\r\n    term: q,\r\n    page: { number: page, size: perPage },\r\n    searchExact: false,\r\n    articleCountry: ENV.TECDOC_ARTICLE_COUNTRIES, // array ok\r\n    dataSupplierIds: [], // filter brands/suppliers if needed\r\n  }\r\n\r\n  const data = await tecdocCall(op, payload)\r\n  return NextResponse.json(data, {\r\n    headers: { \"Cache-Control\": \"private, max-age=60\" },\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;;AAC1B;AACA;AACA;;;;AAEO,MAAM,UAAU;AAEhB,eAAe,IAAI,GAAY;IACpC,MAAM,IAAI,IAAA,mKAAE,EAAC,KAAK;IAClB,IAAI,CAAC,GAAG,OAAO,6TAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAY,GAAG;QAAE,QAAQ;IAAI;IAEvE,MAAM,OAAO,IAAA,oKAAG,EAAC,KAAK,QAAQ;IAC9B,MAAM,UAAU,IAAA,oKAAG,EAAC,KAAK,WAAW;IACpC,MAAM,KAAK,IAAA,mKAAE,EAAC,KAAK,aAAa,0KAAS,CAAC,UAAU,KAAK,0KAAS,CAAC,UAAU;IAE7E,yCAAyC;IACzC,MAAM,UAAU;QACd,MAAM;QACN,MAAM;YAAE,QAAQ;YAAM,MAAM;QAAQ;QACpC,aAAa;QACb,gBAAgB,iKAAG,CAAC,wBAAwB;QAC5C,iBAAiB,EAAE;IACrB;IAEA,MAAM,OAAO,MAAM,IAAA,2KAAU,EAAC,IAAI;IAClC,OAAO,6TAAY,CAAC,IAAI,CAAC,MAAM;QAC7B,SAAS;YAAE,iBAAiB;QAAsB;IACpD;AACF","debugId":null}}]
}